#! /bin/env perl

use strict;
use warnings;
use Sophie::Client;
use Getopt::Long;
use Pod::Usage;
use Config::General;
use File::Temp;

=head1 NAME

    sophie-rpm - Tools to check rpms over Sophie Website

=cut

=head1 SYNOPSYS

    sophie-rpm [-c configfile] [--proxy proxy] RPM1 [RPM2 [...]]

=cut 

my $distrib  = {};
my $searchsp = {};

=head1 OPTIONS

=over4

=item -c configfile

Use this config instead default one (C<~/.sophie.conf>)

=item --proxy proxy

Use this proxy to connect sophie's web site. The proxy must given as an url
like C<http://proxy:8080/>

=item -v

Being verbose, show each required packages

=item -s

Search in database package matching unresolved dependencies

=back

=cut

=item HEAD1 config file

The configuration must look like something like this

    # url http://sophie.zarb.org/rpc
    # proxy http://nanardon.zarb.org:3128/
    <distrib>
    distribution Mandriva
    release 2010.0
    arch x86_64
    </distrib>
    <distrib>
    distribution Mandriva
    release cooker
    arch x86_64
    </distrib>

=over 4

=item proxy URL

Optionnal proxy to use to connect to sophie website

=item url URL

The url of C<RPC> top method, default is C<http://sophie.zarb.org/rpc>.

=item distrib

The distribution for which rpms must be checked

=over 4

=item distribution

The distribution name

=item release

The release provided by this distribution

=item arch

The architecture for this distribution/release

=back

=item search

Works like distrib but is used to find not found dependencies when C<-s> is
used.

=back

=cut 

GetOptions(
    'c=s'   => \my $configfile,
    'u=s'   => \my $url,
    'l=s'   => \my $login,
    'p=s'   => \my $pass,
    'v'     => \my $verbose,
    's'     => \my $search,
    'proxy' => \my $proxy,
) or pod2usage;

$configfile ||= "$ENV{HOME}/.sophie.conf";

if (-f $configfile && (my $conf = Config::General->new($configfile))) {
    my %config = $conf->getall;
    $url         ||= $config{url};
    $login       ||= $config{login};
    $pass        ||= $config{pass};
    $proxy       ||= $config{proxy};
    $distrib     =   $config{distrib};
    $searchsp    =   $config{search};
}

my $sc = Sophie::Client->new(
    server => $url,
    login => $login,
    password => $pass,
    proxy => $proxy,
);

$sc->login;

my $ts = $sc->ts($distrib);

foreach my $rpm (@ARGV) {
    $ts->add_rpm($rpm) or die "Cannot add $rpm";
}

my $res = $ts->run(
    verbose => $verbose,
);
$ts->summary if (@ARGV > 1);
print "\nThis transaction would failed\n" if(!$res);
if ($search) {
    print "\nSearching depedencies in sophie\n";
    foreach my $dep (@{ $ts->{unresolved}} ) {
        my $res = $sc->send_request(
            'search.rpm.bydep', $searchsp, 'P', split(' ', $dep)
        );
        if (ref $res && !$res->is_fault) {
            print "$dep: " . $res->value->{total_entries} . " results\n";
            foreach (@{ $res->value->{results} }) {
                print "    " . $sc->send_request('rpms.basicinfo', $_)->value->{filename};
                print "\n";
            }
        }
    }
}
exit($res ? 0 : 1);

=head1 AUTHOR

Olivier Thauvin C<nanardon@nanardon.zarb.org>

=head1 SEE ALSO

L<http://sophie.zarb.org>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2010 by Olivier Thauvin

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.12.2 or,
at your option, any later version of Perl 5 you may have available.

=cut
